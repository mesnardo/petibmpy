{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"PetibmPy: Python processing tools for PetIBM Small Python package to perform pre- and post-processing steps for PetIBM . Dependencies PetIBM (last tested: 0.4.1 ) Python ( 3.6.8 ) H5Py ( 2.9.0 ) lxml ( 4.3.1 ) Matplotlib ( 3.0.2 ) NumPy ( 1.16.2 ) Pyyaml ( 3.13 ) SciPy ( 1.2.1 ) Installation With Anaconda: conda env create --name=py36-petibmpy --file=environment.yaml conda activate py36-petibmpy python setup.py develop Contact Please e-mail Olivier Mesnard if you have any questions, suggestions, or feedback. To report bugs, please use the GitHub issue tracking system. We also welcome pull-requests.","title":"Home"},{"location":"#petibmpy-python-processing-tools-for-petibm","text":"Small Python package to perform pre- and post-processing steps for PetIBM .","title":"PetibmPy: Python processing tools for PetIBM"},{"location":"#dependencies","text":"PetIBM (last tested: 0.4.1 ) Python ( 3.6.8 ) H5Py ( 2.9.0 ) lxml ( 4.3.1 ) Matplotlib ( 3.0.2 ) NumPy ( 1.16.2 ) Pyyaml ( 3.13 ) SciPy ( 1.2.1 )","title":"Dependencies"},{"location":"#installation","text":"With Anaconda: conda env create --name=py36-petibmpy --file=environment.yaml conda activate py36-petibmpy python setup.py develop","title":"Installation"},{"location":"#contact","text":"Please e-mail Olivier Mesnard if you have any questions, suggestions, or feedback. To report bugs, please use the GitHub issue tracking system. We also welcome pull-requests.","title":"Contact"},{"location":"changelog/","text":"Change Log Current development Added Changed Fixed Removed 0.1 Added Add modules with PEP8-compliant style. Add configuration file for Travis CI. Changed Fixed Removed","title":"Changelog"},{"location":"changelog/#change-log","text":"","title":"Change Log"},{"location":"changelog/#current-development","text":"","title":"Current development"},{"location":"changelog/#added","text":"","title":"Added"},{"location":"changelog/#changed","text":"","title":"Changed"},{"location":"changelog/#fixed","text":"","title":"Fixed"},{"location":"changelog/#removed","text":"","title":"Removed"},{"location":"changelog/#01","text":"","title":"0.1"},{"location":"changelog/#added_1","text":"Add modules with PEP8-compliant style. Add configuration file for Travis CI.","title":"Added"},{"location":"changelog/#changed_1","text":"","title":"Changed"},{"location":"changelog/#fixed_1","text":"","title":"Fixed"},{"location":"changelog/#removed_1","text":"","title":"Removed"},{"location":"contributing/","text":"How to contribute to petibmpy Welcome to the developer's guide of petibmpy! Adding new features and fixing bugs All new features and bug fixes must go through a pull-request review procedure. If you want to contribute to petibmpy, please fork the main petibmpy repository, make your changes on your fork, and then open a pull-request. For new features and minor bugs (with small impact), the base branch of the pull-request should be the develop branch of the main repository. (The develop branch will be merged into the master one once we are ready for a new release of petibmpy.) For major bugs, the base branch should be the master branch of the main repository; it will be considered as a hotfix (bugfix) and a new version of petibmpy will be released as soon as possible by the maintainers with the micro number incremented. New features should come with some kind of test or example to verify and/or validate the implementation. Reporting bugs and requesting new features To report bugs, request new features, or simply ask questions, please open a GitHub issue on the main repository. Writing documentation New classes, methods, and functions must be documented with doctrings. You should also add code documentation whenever necessary; it will greatly help other developers to review your new features and bug fixes.","title":"Contributing"},{"location":"contributing/#how-to-contribute-to-petibmpy","text":"Welcome to the developer's guide of petibmpy!","title":"How to contribute to petibmpy"},{"location":"contributing/#adding-new-features-and-fixing-bugs","text":"All new features and bug fixes must go through a pull-request review procedure. If you want to contribute to petibmpy, please fork the main petibmpy repository, make your changes on your fork, and then open a pull-request. For new features and minor bugs (with small impact), the base branch of the pull-request should be the develop branch of the main repository. (The develop branch will be merged into the master one once we are ready for a new release of petibmpy.) For major bugs, the base branch should be the master branch of the main repository; it will be considered as a hotfix (bugfix) and a new version of petibmpy will be released as soon as possible by the maintainers with the micro number incremented. New features should come with some kind of test or example to verify and/or validate the implementation.","title":"Adding new features and fixing bugs"},{"location":"contributing/#reporting-bugs-and-requesting-new-features","text":"To report bugs, request new features, or simply ask questions, please open a GitHub issue on the main repository.","title":"Reporting bugs and requesting new features"},{"location":"contributing/#writing-documentation","text":"New classes, methods, and functions must be documented with doctrings. You should also add code documentation whenever necessary; it will greatly help other developers to review your new features and bug fixes.","title":"Writing documentation"}]}